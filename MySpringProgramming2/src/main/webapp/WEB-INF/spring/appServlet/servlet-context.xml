<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mycompany.myapp2" />
	
	<!-- A를 관리 객체로 생성 -->
	<beans:bean name="a_Obj" class="com.mycompany.myapp2.exam09.A"/>
	<!-- B를 관리 객체로 생성 -->
	<beans:bean name="b_Obj" class="com.mycompany.myapp2.exam09.B"/>
	<!--C를 관리 객체로 생성-->
	<beans:bean name="c" class="com.mycompany.myapp2.exam09.C">
		<beans:constructor-arg ref="d"/>
	</beans:bean>
	<!--D를 관리 객체로 생성-->
	<beans:bean name="d" class="com.mycompany.myapp2.exam09.D"/>
	<!--E를 관리 객체로 생성--> <!--기본생성자가 없기때문에 contructor을 쓰지 않으면 안된다.  -->
	<beans:bean name="e" class="com.mycompany.myapp2.exam09.E">
		<beans:constructor-arg ref="d" />
		<beans:constructor-arg ref="b_Obj" />
	</beans:bean>
	
	<beans:bean name="f" class="com.mycompany.myapp2.exam09.F">
		<beans:constructor-arg ref="ServiceAObj" />
		<beans:constructor-arg ref="ServiceBObj" />
		<beans:constructor-arg ref="ServiceCImpl1" />
	</beans:bean>
	<!--ServiceA를 관리 객체로 생성-->
	<beans:bean name="ServiceAObj" class="com.mycompany.myapp2.exam09.ServiceA"/>
	<!--ServiceB를 관리 객체로 생성-->
	<beans:bean name="ServiceBObj" class="com.mycompany.myapp2.exam09.ServiceB"/>
	<!--ServiceCImpl1를 관리 객체로 생성-->
	<beans:bean name="ServiceCImpl1" class="com.mycompany.myapp2.exam09.ServiceCImpl1"/>
	<!--ServiceCImpl2를 관리 객체로 생성-->
	<beans:bean name="ServiceCImpl2" class="com.mycompany.myapp2.exam09.ServiceCImpl2"/>
		
	<beans:bean name="exam09Controller" class="com.mycompany.myapp2.exam09.Exam09Controller">
	<beans:property name="a" ref="a_Obj"/>
	<beans:property name="b" ref="b_Obj"/> <!-- setter 주입을하라는 의미 property , setter 메소드의 이름을 쓰는데 set을 빼고 첫자로 소문자로한 이름이 name에 들어온다.-->
	<beans:property name="serviceA" ref="ServiceAObj"/>
	<beans:property name="serviceB" ref="ServiceBObj"/>
	<beans:property name="serviceC" ref="ServiceCImpl1"/>
	<beans:property name="serviceD" ref="ServiceCImpl2"/>
	<beans:property name="c" ref="c"/>
	<beans:property name="e" ref="e"/>
	<beans:property name="f" ref="f"/>
	</beans:bean>
	
</beans:beans>
