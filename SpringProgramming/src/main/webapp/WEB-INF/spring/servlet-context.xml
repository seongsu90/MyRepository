<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mycompany.myapp" />
	
	<!-- A를 관래 객체로 생성 -->
	<beans:bean name="aObj" class="com.mycompany.myapp.exam09.A"/>
	<!--B를 관리 객체로 생성-->
	<beans:bean name="bObj" class="com.mycompany.myapp.exam09.B"/>
	<!--C를 관리 객체로 생성-->
	<beans:bean name="c" class="com.mycompany.myapp.exam09.C">
		<beans:constructor-arg ref="d"/>
	</beans:bean>
	<!--D를 관리 객체로 생성-->
	<beans:bean name="d" class="com.mycompany.myapp.exam09.D"/>
	<!--E를 관리 객체로 생성--> <!--기본생성자가 없기때문에 contructor을 쓰지 않으면 안된다.  -->
	<beans:bean name="e" class="com.mycompany.myapp.exam09.E">
		<beans:constructor-arg ref="d" />
		<beans:constructor-arg ref="bObj" />
	</beans:bean>
	
	<beans:bean name="f" class="com.mycompany.myapp.exam09.F">
		<beans:constructor-arg ref="ServiceAObj" />
		<beans:constructor-arg ref="ServiceBObj" />
		<beans:constructor-arg ref="ServiceCImpl1" />
	</beans:bean>
	
	<!--ServiceA를 관리 객체로 생성-->
	<beans:bean name="ServiceAObj" class="com.mycompany.myapp.exam09.ServiceA"/>
	<!--ServiceB를 관리 객체로 생성-->
	<beans:bean name="ServiceBObj" class="com.mycompany.myapp.exam09.ServiceB"/>
	<!--ServiceCImpl1를 관리 객체로 생성-->
	<beans:bean name="ServiceCImpl1" class="com.mycompany.myapp.exam09.ServiceCImpl1"/>
	<!--ServiceCImpl2를 관리 객체로 생성-->
	<beans:bean name="ServiceCImpl2" class="com.mycompany.myapp.exam09.ServiceCImpl2"/>
	
	<!-- Exam09Controller 객체를 찾아서 가져오기 , 이미 이 객체를 생성해놓고있기때문에 , @Controller가 없다면 새로 관리 객체 생성-->
	<beans:bean name="exam09Controller" class="com.mycompany.myapp.exam09.Exam09Controller"> <!-- 이름은 클래스 이름과 같다. 대신 앞글자는 소문자다. -->
		<!-- Setter 주입
		<beans:property name="setter이름" ref="매개값으로 전달할 객체(관리객체이름)"/>
		 -->
		<beans:property name="a" ref="aObj"/>
		<beans:property name="b" ref="bObj"/> <!-- setter 주입을하라는 의미 property , setter 메소드의 이름을 쓰는데 set을 빼고 첫자로 소문자로한 이름이 name에 들어온다.-->
		<beans:property name="serviceA" ref="ServiceAObj"/>
		<beans:property name="serviceB" ref="ServiceBObj"/>
		<beans:property name="serviceC" ref="ServiceCImpl1"/>
		<beans:property name="serviceD" ref="ServiceCImpl2"/>
		<beans:property name="c" ref="c"/>
		<beans:property name="e" ref="e"/>
		<beans:property name="f" ref="f"/>
		
		
	</beans:bean>
	
	<!-- Connection Pool -->
	<beans:bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass" value="oracle.jdbc.OracleDriver"/>
		<beans:property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl"/>
		<beans:property name="user" value="tester1"/>
		<beans:property name="password" value="kosa12345"/>
		<beans:property name="maxPoolSize" value="3"/>
		<beans:property name="initialPoolSize" value="1"/>
		<beans:property name="acquireIncrement" value="1"/>
		<beans:property name="minPoolSize" value="1"/>
	</beans:bean>			
</beans:beans>
